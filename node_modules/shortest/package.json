{
  "_args": [
    [
      {
        "raw": "shortest@~0.0.0",
        "scope": null,
        "escapedName": "shortest",
        "name": "shortest",
        "rawSpec": "~0.0.0",
        "spec": ">=0.0.0 <0.1.0",
        "type": "range"
      },
      "/www/examples/webgl/node_modules/glslify-stream"
    ]
  ],
  "_from": "shortest@>=0.0.0 <0.1.0",
  "_id": "shortest@0.0.0",
  "_inCache": true,
  "_location": "/shortest",
  "_phantomChildren": {},
  "_requested": {
    "raw": "shortest@~0.0.0",
    "scope": null,
    "escapedName": "shortest",
    "name": "shortest",
    "rawSpec": "~0.0.0",
    "spec": ">=0.0.0 <0.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/glslify-stream"
  ],
  "_resolved": "https://registry.npmjs.org/shortest/-/shortest-0.0.0.tgz",
  "_shasum": "dc4c8d0722e7a9208ec7d2098e4cda8cac6e567d",
  "_shrinkwrap": null,
  "_spec": "shortest@~0.0.0",
  "_where": "/www/examples/webgl/node_modules/glslify-stream",
  "author": {
    "name": "Chris Dickinson",
    "email": "chris@neversaw.us"
  },
  "bugs": {
    "url": "https://github.com/chrisdickinson/shortest/issues"
  },
  "dependencies": {},
  "description": "given an input character set, create an iterator function that returns the next shortest string available",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "dc4c8d0722e7a9208ec7d2098e4cda8cac6e567d",
    "tarball": "https://registry.npmjs.org/shortest/-/shortest-0.0.0.tgz"
  },
  "homepage": "https://github.com/chrisdickinson/shortest#readme",
  "keywords": [
    "radix",
    "conversion",
    "shortest",
    "identifier"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "chrisdickinson",
      "email": "chris@neversaw.us"
    }
  ],
  "name": "shortest",
  "optionalDependencies": {},
  "readme": "# shortest\n\n```javascript\n\nvar counter = require('shortest')('abcdefg'.split(''))\n\nfor(var i = 0, len = 100; i < len; ++i) {\n  process.stdout.write(counter()+' ')\n}\n\n/* output:\n\na b c d e f g ba bb bc bd be bf bg ca cb cc cd ce cf cg da db dc dd de df dg ea eb ec ed ee ef eg fa fb fc fd fe ff fg ga gb gc gd ge gf gg baa bab bac bad bae baf bag bba bbb bbc bbd bbe bbf bbg bca bcb bcc bcd bce bcf bcg bda bdb bdc bdd bde bdf bdg bea beb bec bed bee bef beg bfa bfb bfc bfd bfe bff bfg bga bgb bgc bgd bge bgf bgg caa cab\n\n*/\n\n```\n\nCreate a counter function that iterates through a provided space of characters.\n\n# api\n\n### counter = require('shortest')([character set])\n\ncreate a counter function.\n\n### counter() -> string\n\nreturn the next item in the sequence\n\n### counter.pos() -> position\n\nreturn the current position in the sequence\n\n### counter.skip(N) -> position\n\nskip N items and return the new position\n\n### counter.reset() -> 0\n\nreturn counter to 0\n\n# license\n\nMIT\n\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/chrisdickinson/shortest.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "0.0.0"
}
